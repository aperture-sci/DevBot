name: Build and Push Docker Image

on:
  push:
    tags:
      - v*  # Specify the pattern for release tags, such as 'v*'
  workflow_dispatch:
    paths:
      - '.github/workflows/build_and_push.yml'

jobs:
  lint:
    name: Run Linter
    runs-on: ubuntu-latest  # You can change the runner environment as needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the repository code

      - name: Set up Python
        uses: actions/setup-python@v2  # Set up Python environment
        with:
          python-version: 3.11  # Specify Python version 3.11

      - name: Install dependencies
        run: pip install -r src/requirements.txt  # Install dependencies from the src folder

      - name: Install flake8
        run: pip install flake8

      - name: Run Linter
        run: flake8 --ignore=E501 src  # Replace with your linter command and specify the target directory, e.g., pylint src, mypy src, etc.

  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Update package lists and upgrade packages
      run: |
        sudo apt-get update
        sudo apt-get upgrade -y

    - name: Remove conflicting packages
      run: |
        sudo apt-get remove -y moby-containerd containerd moby-runc runc

    - name: Install Docker
      run: |
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker

    - name: Verify Docker installation
      run: |
        docker version
        docker info

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get the username and password from GitHub Secrets
      run: |
        # Get the username and password from GitHub Secrets
        echo "quayIoUsername=${{ secrets.DEV_BOT_USER }}" >> $GITHUB_ENV
        echo "quayIoPassword=${{ secrets.DEV_BOT_PASS }}" >> $GITHUB_ENV

    - name: Set up Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker

    - name: Get Git tag
      run: |
        git_tag="${{ github.event.ref }}"
        echo "Git tag: $git_tag"

    - name: Get latest release tag
      run: |
        if git rev-parse --is-shallow-repository; then
          git fetch --unshallow
        fi
        release_tag=$(git describe --abbrev=0 --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "$(git rev-parse --short HEAD)")
        echo "Latest release tag = $release_tag"

    - name: Define the Docker image name
      run: |    
        # Define the Docker image name
        echo "dockerImageName=devbot" >> $GITHUB_ENV

    - name: Build the Docker image
      run: |    
        # Build the Docker image
        docker build -t "$dockerImageName:$docker_image_tag" .

    - name: Login to Quay.io
      run: |    
        # Log in to the quay.io container registry using stdin for password
        echo "$quayIoPassword" | docker login quay.io -u "$quayIoUsername" --password-stdin

    - name: Tag the Docker image with the quay.io repository
      run: | 
        # Tag the Docker image with the quay.io repository
        quayIoRepository=quay.io/codefresh_sa/devbot
        echo "quayIoRepository=quay.io/codefresh_sa/devbot" >> $GITHUB_ENV
        docker tag "$dockerImageName:$docker_image_tag" "$quayIoRepository:$docker_image_tag"

    - name: Push to registry
      run: |    
        # Push the Docker image to the quay.io container registry
        docker push "$quayIoRepository:$dockerImageTag"

    - name: Clean Up
      run: |
        # Clean up: remove the local Docker image
        docker rmi "$dockerImageName:$dockerImageTag"
